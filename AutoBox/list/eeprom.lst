C51 COMPILER V9.00   EEPROM                                                                08/30/2016 22:33:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN ..\obj\eeprom.obj
COMPILER INVOKED BY: D:\Program Files\KeilC51V9.00\C51\BIN\C51.EXE ..\user\eeprom.c BROWSE INCDIR(..\include) DEBUG OBJE
                    -CTEXTEND PRINT(..\list\eeprom.lst) OBJECT(..\obj\eeprom.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 系列 内部EEPROM举例--------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  10          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  14          //若无特别说明,工作频率一般为11.0592MHz
  15          
  16          
  17          #include "stc15.h"
  18          #include "eeprom.h"
  19          #include "intrins.h"
  20          
  21          
  22          #define CMD_IDLE    0               //空闲模式
  23          #define CMD_READ    1               //IAP字节读命令
  24          #define CMD_PROGRAM 2               //IAP字节编程命令
  25          #define CMD_ERASE   3               //IAP扇区擦除命令
  26          
  27          #define     URMD    0           //0:使用定时器2作为波特率发生器
  28                                          //1:使用定时器1的模式0(16位自动重载模式)作为波特率发生器
  29                                          //2:使用定时器1的模式2(8位自动重载模式)作为波特率发生器                   
             -        
  30          
  31          //#define ENABLE_IAP 0x80           //if SYSCLK<30MHz
  32          //#define ENABLE_IAP 0x81           //if SYSCLK<24MHz
  33          #define ENABLE_IAP  0x82            //if SYSCLK<20MHz
  34          //#define ENABLE_IAP 0x83           //if SYSCLK<12MHz
  35          //#define ENABLE_IAP 0x84           //if SYSCLK<6MHz
  36          //#define ENABLE_IAP 0x85           //if SYSCLK<3MHz
  37          //#define ENABLE_IAP 0x86           //if SYSCLK<2MHz
  38          //#define ENABLE_IAP 0x87           //if SYSCLK<1MHz
  39          
  40          void IapIdle();
  41          BYTE IapReadByte(WORD addr);
  42          void IapProgramByte(WORD addr, BYTE dat);
  43          void IapEraseSector(WORD addr);
  44          /*----------------------------
  45          关闭IAP
  46          ----------------------------*/
  47          void IapIdle()
  48          {
  49   1          IAP_CONTR = 0;                  //关闭IAP功能
  50   1          IAP_CMD = 0;                    //清除命令寄存器
  51   1          IAP_TRIG = 0;                   //清除触发寄存器
  52   1          IAP_ADDRH = 0x80;               //将地址设置到非IAP区域
  53   1          IAP_ADDRL = 0;
C51 COMPILER V9.00   EEPROM                                                                08/30/2016 22:33:58 PAGE 2   

  54   1      }
  55          
  56          /*----------------------------
  57          从ISP/IAP/EEPROM区域读取一字节
  58          ----------------------------*/
  59          BYTE IapReadByte(WORD addr)
  60          {
  61   1          BYTE dat;                       //数据缓冲区
  62   1      
  63   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  64   1          IAP_CMD = CMD_READ;             //设置IAP命令
  65   1          IAP_ADDRL = addr;               //设置IAP低地址
  66   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  67   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  68   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  69   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
  70   1          dat = IAP_DATA;                 //读ISP/IAP/EEPROM数据
  71   1          IapIdle();                      //关闭IAP功能
  72   1      
  73   1          return dat;                     //返回
  74   1      }
  75          
  76          /*----------------------------
  77          写一字节数据到ISP/IAP/EEPROM区域
  78          ----------------------------*/
  79          void IapProgramByte(WORD addr, BYTE dat)
  80          {
  81   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  82   1          IAP_CMD = CMD_PROGRAM;          //设置IAP命令
  83   1          IAP_ADDRL = addr;               //设置IAP低地址
  84   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  85   1          IAP_DATA = dat;                 //写ISP/IAP/EEPROM数据
  86   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  87   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  88   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
  89   1          IapIdle();
  90   1      }
  91          
  92          /*----------------------------
  93          扇区擦除
  94          ----------------------------*/
  95          void IapEraseSector(WORD addr)
  96          {
  97   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  98   1          IAP_CMD = CMD_ERASE;            //设置IAP命令
  99   1          IAP_ADDRL = addr;               //设置IAP低地址
 100   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
 101   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
 102   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
 103   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
 104   1          IapIdle();
 105   1      }
 106          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.00   EEPROM                                                                08/30/2016 22:33:58 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
